#if defined(EXT_EXTERN)
#undef EXT_EXTERN
#endif

#define EXT_EXTERN

#include "gl_ext_api.h"

//#include "CppUtils/assert.h"

#include <assert.h>

void InitGlExts() {
#if defined(BNS_OS_MESA)
#define EXTENSION_PROC_OPTIONAL(type,name) name = (type)OSMesaGetProcAddress(#name);
#elif defined(_WIN32)
#define EXTENSION_PROC_OPTIONAL(type,name) name = (type)wglGetProcAddress(#name);
#elif defined(__APPLE__)
#define EXTENSION_PROC_OPTIONAL(type,name)
#else
#define EXTENSION_PROC_OPTIONAL(type,name) name = (type)glXGetProcAddress((const unsigned char*)#name);
#endif

#define EXTENSION_PROC(type, name) EXTENSION_PROC_OPTIONAL(type, name) assert(name != nullptr);

	EXTENSION_PROC(PFNGLCREATESHADERPROC, glCreateShader);
	EXTENSION_PROC(PFNGLSHADERSOURCEPROC, glShaderSource);
	EXTENSION_PROC(PFNGLCOMPILESHADERPROC, glCompileShader);
	EXTENSION_PROC(PFNGLGETSHADERIVPROC, glGetShaderiv);
	EXTENSION_PROC(PFNGLGETSHADERINFOLOGPROC, glGetShaderInfoLog);
	EXTENSION_PROC(PFNGLATTACHSHADERPROC, glAttachShader);
	EXTENSION_PROC(PFNGLGETPROGRAMIVPROC, glGetProgramiv);
	EXTENSION_PROC(PFNGLLINKPROGRAMPROC, glLinkProgram);
	EXTENSION_PROC(PFNGLGETPROGRAMINFOLOGPROC, glGetProgramInfoLog);
	EXTENSION_PROC(PFNGLVALIDATEPROGRAMPROC, glValidateProgram);
	EXTENSION_PROC(PFNGLCREATEPROGRAMPROC, glCreateProgram);
	EXTENSION_PROC(PFNGLUSEPROGRAMPROC, glUseProgram);
	EXTENSION_PROC(PFNGLGENBUFFERSPROC, glGenBuffers);
	EXTENSION_PROC(PFNGLBINDBUFFERPROC, glBindBuffer);
	EXTENSION_PROC(PFNGLBUFFERDATAPROC, glBufferData);
	EXTENSION_PROC(PFNGLGETATTRIBLOCATIONPROC, glGetAttribLocation);
	EXTENSION_PROC(PFNGLENABLEVERTEXATTRIBARRAYPROC, glEnableVertexAttribArray);
	EXTENSION_PROC(PFNGLDISABLEVERTEXATTRIBARRAYPROC, glDisableVertexAttribArray);
	EXTENSION_PROC(PFNGLVERTEXATTRIBPOINTERPROC, glVertexAttribPointer);
	EXTENSION_PROC(PFNGLUNIFORM1FPROC, glUniform1f);
	EXTENSION_PROC(PFNGLUNIFORM2FPROC, glUniform2f);
	EXTENSION_PROC(PFNGLUNIFORM1IPROC, glUniform1i);
	EXTENSION_PROC(PFNGLGETUNIFORMLOCATIONPROC, glGetUniformLocation);
	EXTENSION_PROC(PFNGLUNIFORMMATRIX4FVPROC, glUniformMatrix4fv);
	EXTENSION_PROC(PFNGLUNIFORM3FVPROC, glUniform3fv);
	EXTENSION_PROC(PFNGLUNIFORM4FVPROC, glUniform4fv);
	EXTENSION_PROC(PFNGLDELETEBUFFERSPROC, glDeleteBuffers);
	EXTENSION_PROC_OPTIONAL(PFNGLGETPROGRAMBINARYPROC, glGetProgramBinary);
	EXTENSION_PROC(PFNGLDELETESHADERPROC, glDeleteShader);
	EXTENSION_PROC(PFNGLDELETEPROGRAMPROC, glDeleteProgram);
#if defined(_WIN32)
	EXTENSION_PROC(PFNGLACTIVETEXTUREPROC, glActiveTexture);
#endif
	EXTENSION_PROC(PFNGLBLENDEQUATIONPROC, glBlendEquation);
	EXTENSION_PROC(PFNGLBLENDFUNCSEPARATEPROC, glBlendFuncSeparate);
	EXTENSION_PROC(PFNGLBINDSAMPLERPROC, glBindSampler);
	EXTENSION_PROC(PFNGLBINDVERTEXARRAYPROC, glBindVertexArray);
	EXTENSION_PROC(PFNGLGENVERTEXARRAYSPROC, glGenVertexArrays);
	EXTENSION_PROC(PFNGLDRAWELEMENTSBASEVERTEXPROC, glDrawElementsBaseVertex);
	EXTENSION_PROC(PFNGLDELETEVERTEXARRAYSPROC, glDeleteVertexArrays);
	EXTENSION_PROC(PFNGLBLENDEQUATIONSEPARATEPROC, glBlendEquationSeparate);
	EXTENSION_PROC(PFNGLDETACHSHADERPROC, glDetachShader);
	EXTENSION_PROC(PFNGLDISPATCHCOMPUTEPROC, glDispatchCompute);
	EXTENSION_PROC(PFNGLMEMORYBARRIERPROC, glMemoryBarrier);
	EXTENSION_PROC(PFNGLGETINTEGERI_VPROC, glGetIntegeri_v);
	EXTENSION_PROC(PFNGLBINDIMAGETEXTUREPROC, glBindImageTexture);
	EXTENSION_PROC(PFNGLGETTEXTUREIMAGEPROC, glGetTextureImage);
#undef EXTENSION_PROC
}

#undef EXT_EXTERN

